{
  "version": 3,
  "sources": ["../../../src/interest-invokers.ts"],
  "sourcesContent": ["/**\r\n * @file interest-invokers.ts\r\n * @summary Interest Invokers polyfill and TypeScript support for the Invokers library\r\n * @description\r\n * This module provides comprehensive support for Interest Invokers as specified in:\r\n * https://open-ui.org/components/interest-invokers.explainer/\r\n * \r\n * Based on the official polyfill by Mason Freed with TypeScript adaptation\r\n * and integration with the existing Invokers library patterns.\r\n * \r\n * @author Mason Freed (original polyfill), Patrick Glenn (TypeScript adaptation)\r\n * @license MIT / BSD (compatible with original polyfill license)\r\n */\r\n\r\n// --- TypeScript Interfaces and Types ---\r\n\r\n/**\r\n * Represents an InterestEvent as defined in the Interest Invokers specification\r\n */\r\nexport interface InterestEventInit extends EventInit {\r\n  source?: Element;\r\n}\r\n\r\nexport interface InterestEvent extends Event {\r\n  readonly source: Element | null;\r\n}\r\n\r\nexport interface InterestInvokerElement {\r\n  interestForElement: Element | null;\r\n}\r\n\r\n// Global type declarations\r\ndeclare global {\r\n  interface InterestEventInit extends EventInit {\r\n    source?: Element;\r\n  }\r\n  \r\n  interface InterestEvent extends Event {\r\n    readonly source: Element | null;\r\n  }\r\n\r\n  interface HTMLButtonElement extends InterestInvokerElement {}\r\n  interface HTMLAnchorElement extends InterestInvokerElement {}\r\n  interface HTMLAreaElement extends InterestInvokerElement {}\r\n  \r\n  // SVG support\r\n  interface SVGAElement extends InterestInvokerElement {}\r\n\r\n  interface Window {\r\n    interestForPolyfillInstalled?: boolean;\r\n    interestForUsePolyfillAlways?: boolean;\r\n  }\r\n}\r\n\r\n// --- Interest Invokers Polyfill Implementation ---\r\n\r\n/**\r\n * Feature detection function to check if Interest Invokers are natively supported\r\n */\r\nexport function isInterestInvokersSupported(): boolean {\r\n  return (\r\n    typeof HTMLButtonElement !== \"undefined\" &&\r\n    \"interestForElement\" in HTMLButtonElement.prototype\r\n  );\r\n}\r\n\r\n/**\r\n * Main Interest Invokers polyfill class\r\n * Adapted from Mason Freed's official polyfill with TypeScript support\r\n */\r\nclass InterestInvokersPolyfill {\r\n  private static instance: InterestInvokersPolyfill | null = null;\r\n  private initialized = false;\r\n\r\n  // Constants\r\n  private readonly attributeName = \"interestfor\";\r\n  private readonly interestEventName = \"interest\";\r\n  private readonly loseInterestEventName = \"loseinterest\";\r\n  private readonly interestDelayStartProp = \"--interest-delay-start\";\r\n  private readonly interestDelayEndProp = \"--interest-delay-end\";\r\n  private readonly interestDelayProp = \"--interest-delay\";\r\n  private readonly dataField = \"__interestForData\";\r\n  private readonly targetDataField = \"__interestForTargetData\";\r\n\r\n  // State tracking\r\n  private readonly invokersWithInterest = new Set<HTMLElement>();\r\n  private touchInProgress = false;\r\n\r\n  // State enum\r\n  private readonly InterestState = {\r\n    NoInterest: \"none\",\r\n    FullInterest: \"full\",\r\n  } as const;\r\n\r\n  // Source enum\r\n  private readonly Source = {\r\n    Hover: \"hover\",\r\n    DeHover: \"dehover\",\r\n    Focus: \"focus\",\r\n    Blur: \"blur\",\r\n    Touch: \"touch\",\r\n  } as const;\r\n\r\n  private constructor() {}\r\n\r\n  static getInstance(): InterestInvokersPolyfill {\r\n    if (!InterestInvokersPolyfill.instance) {\r\n      InterestInvokersPolyfill.instance = new InterestInvokersPolyfill();\r\n    }\r\n    return InterestInvokersPolyfill.instance;\r\n  }\r\n\r\n  /**\r\n   * Initialize the Interest Invokers polyfill\r\n   */\r\n  public apply(): void {\r\n    // Feature detection and early return\r\n    if (window.interestForPolyfillInstalled) {\r\n      return;\r\n    }\r\n\r\n    window.interestForPolyfillInstalled = true;\r\n    const nativeSupported = isInterestInvokersSupported();\r\n\r\n    if (nativeSupported && !window.interestForUsePolyfillAlways) {\r\n      return;\r\n    }\r\n\r\n    if (nativeSupported) {\r\n      this.disableNativeSupport();\r\n    }\r\n\r\n    this.setupPolyfill();\r\n    this.initialized = true;\r\n\r\n    console.log(`Interest Invokers polyfill installed (native: ${nativeSupported}).`);\r\n  }\r\n\r\n  /**\r\n   * Disable native support if present to allow polyfill to take effect\r\n   */\r\n  private disableNativeSupport(): void {\r\n    const cancel = (e: Event) => {\r\n      if (e.isTrusted) {\r\n        e.preventDefault();\r\n        e.stopImmediatePropagation();\r\n      }\r\n    };\r\n\r\n    document.body.addEventListener(this.interestEventName, cancel, { capture: true });\r\n    document.body.addEventListener(this.loseInterestEventName, cancel, { capture: true });\r\n  }\r\n\r\n  /**\r\n   * Setup the complete polyfill\r\n   */\r\n  private setupPolyfill(): void {\r\n    this.registerCustomProperties();\r\n    this.addEventHandlers();\r\n    this.setupElementMixins();\r\n  }\r\n\r\n  /**\r\n   * Register CSS custom properties for interest delays\r\n   */\r\n  private registerCustomProperties(): void {\r\n    const style = document.createElement(\"style\");\r\n    style.textContent = `\r\n      @property ${this.interestDelayStartProp} {\r\n        syntax: \"normal | <time>\";\r\n        inherits: false;\r\n        initial-value: normal;\r\n      }\r\n      @property ${this.interestDelayEndProp} {\r\n        syntax: \"normal | <time>\";\r\n        inherits: false;\r\n        initial-value: normal;\r\n      }\r\n      @property ${this.interestDelayProp} {\r\n        syntax: \"[ normal | <time> ]{1,2}\";\r\n        inherits: false;\r\n        initial-value: normal;\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n    (document as any)[this.dataField] = { globalPropsStyle: style };\r\n  }\r\n\r\n  /**\r\n   * Setup element mixins for supported elements\r\n   */\r\n  private setupElementMixins(): void {\r\n    // Button support\r\n    this.applyInterestInvokerMixin(HTMLButtonElement);\r\n    \r\n    // Anchor support\r\n    this.applyInterestInvokerMixin(HTMLAnchorElement);\r\n    \r\n    // Area support  \r\n    this.applyInterestInvokerMixin(HTMLAreaElement);\r\n\r\n    // SVG Anchor support (if available)\r\n    if (typeof SVGAElement !== 'undefined') {\r\n      this.applyInterestInvokerMixin(SVGAElement as any);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apply the interestForElement property to supported elements\r\n   */\r\n  private applyInterestInvokerMixin(ElementClass: any): void {\r\n    Object.defineProperty(ElementClass.prototype, 'interestForElement', {\r\n      enumerable: true,\r\n      configurable: true,\r\n      get(this: HTMLElement): Element | null {\r\n        const id = this.getAttribute('interestfor');\r\n        return id ? document.getElementById(id) : null;\r\n      },\r\n      set(this: HTMLElement, value: Element | null) {\r\n        if (value === null) {\r\n          this.removeAttribute('interestfor');\r\n        } else if (value && typeof value === 'object' && 'id' in value) {\r\n          this.setAttribute('interestfor', value.id || '');\r\n        } else {\r\n          throw new TypeError('interestForElement must be an element or null');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add all event handlers for interest detection\r\n   */\r\n  private addEventHandlers(): void {\r\n    // Mouse events\r\n    document.body.addEventListener(\"mouseover\", (e) => \r\n      this.handleInterestHoverOrFocus(e.target as HTMLElement, this.Source.Hover)\r\n    );\r\n    document.body.addEventListener(\"mouseout\", (e) => \r\n      this.handleInterestHoverOrFocus(e.target as HTMLElement, this.Source.DeHover)\r\n    );\r\n\r\n    // Keyboard events\r\n    document.body.addEventListener(\"focusin\", (e) => \r\n      this.handleInterestHoverOrFocus(e.target as HTMLElement, this.Source.Focus)\r\n    );\r\n    document.body.addEventListener(\"focusout\", (e) => \r\n      this.handleInterestHoverOrFocus(e.target as HTMLElement, this.Source.Blur)\r\n    );\r\n\r\n    // Escape key to clear all interest\r\n    document.body.addEventListener(\"keydown\", (e) => {\r\n      if (e.key === \"Escape\") {\r\n        this.invokersWithInterest.forEach((invoker) => {\r\n          this.clearState(invoker);\r\n        });\r\n      }\r\n    });\r\n\r\n    // Touch events\r\n    this.setupTouchHandlers();\r\n  }\r\n\r\n  /**\r\n   * Setup touch event handlers for long press support\r\n   */\r\n  private setupTouchHandlers(): void {\r\n    const longPressTime = 500;\r\n\r\n    document.body.addEventListener(\"touchstart\", (e) => {\r\n      this.touchInProgress = true;\r\n      const invoker = (e.target as HTMLElement).closest(\"button[interestfor]\") as HTMLElement;\r\n      if (invoker) {\r\n        this.initializeDataField(invoker);\r\n        const data = (invoker as any)[this.dataField];\r\n        data.longPressTimer = setTimeout(() => {\r\n          this.gainOrLoseInterest(\r\n            invoker, \r\n            this.getInterestForTarget(invoker), \r\n            this.InterestState.FullInterest\r\n          );\r\n          data.longPressTimer = null;\r\n        }, longPressTime);\r\n      }\r\n    });\r\n\r\n    const cancelLongPress = (e: Event) => {\r\n      const invoker = (e.target as HTMLElement).closest(\"button[interestfor]\") as HTMLElement;\r\n      if (invoker) {\r\n        const data = (invoker as any)[this.dataField];\r\n        if (data?.longPressTimer) {\r\n          clearTimeout(data.longPressTimer);\r\n          data.longPressTimer = null;\r\n        }\r\n      }\r\n    };\r\n\r\n    document.body.addEventListener(\"touchend\", (e) => {\r\n      cancelLongPress(e);\r\n      this.touchInProgress = false;\r\n    });\r\n    document.body.addEventListener(\"touchmove\", cancelLongPress);\r\n  }\r\n\r\n  /**\r\n   * Handle interest changes from hover or focus events\r\n   */\r\n  private handleInterestHoverOrFocus(\r\n    el: HTMLElement, \r\n    source: string\r\n  ): void {\r\n    if (this.touchInProgress) return;\r\n    if (!el.isConnected) return;\r\n\r\n    const target = this.getInterestForTarget(el);\r\n    if (!target) {\r\n      this.handleUpstreamInterest(el, source);\r\n      return;\r\n    }\r\n\r\n    // Safety check: don't interfere if element is disabled\r\n    if (el instanceof HTMLButtonElement && el.disabled) {\r\n      return;\r\n    }\r\n\r\n    this.initializeDataField(el);\r\n    const data = (el as any)[this.dataField];\r\n    const upstreamInvoker = this.getInterestInvoker(el);\r\n\r\n    if (source === this.Source.Hover || source === this.Source.Focus) {\r\n      data.clearLostTask?.();\r\n      (upstreamInvoker as any)?.[this.dataField]?.clearLostTask?.();\r\n      this.scheduleInterestGainedTask(el, this.InterestState.FullInterest);\r\n    } else {\r\n      data.clearGainedTask?.();\r\n      if (data.state !== this.InterestState.NoInterest) {\r\n        this.scheduleInterestLostTask(el);\r\n      }\r\n      if (upstreamInvoker) {\r\n        (upstreamInvoker as any)[this.dataField]?.clearGainedTask?.();\r\n        if (source === this.Source.Blur || !el.matches(\":hover\")) {\r\n          this.scheduleInterestLostTask(upstreamInvoker);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle upstream interest for elements without direct targets\r\n   */\r\n  private handleUpstreamInterest(el: HTMLElement, source: string): void {\r\n    const containingTarget = el.closest(\".interest-target\") as HTMLElement;\r\n    if (containingTarget) {\r\n      const upstreamInvoker = this.getInterestInvoker(containingTarget);\r\n      if (upstreamInvoker) {\r\n        const data = (upstreamInvoker as any)[this.dataField];\r\n        if (source === this.Source.Hover || source === this.Source.Focus) {\r\n          data?.clearLostTask?.();\r\n        } else {\r\n          if (source === this.Source.Blur || !el.matches(\":hover\")) {\r\n            this.scheduleInterestLostTask(upstreamInvoker);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gain or lose interest in an element\r\n   */\r\n  private gainOrLoseInterest(\r\n    invoker: HTMLElement, \r\n    target: HTMLElement | null, \r\n    newState: string\r\n  ): boolean {\r\n    if (!invoker || !target) return false;\r\n\r\n    if (!invoker.isConnected || \r\n        this.getInterestForTarget(invoker) !== target ||\r\n        (newState === this.InterestState.NoInterest && \r\n         this.getInterestInvoker(target) !== invoker)) {\r\n      return false;\r\n    }\r\n\r\n    if (newState !== this.InterestState.NoInterest) {\r\n      const existing = this.getInterestInvoker(target);\r\n      if (existing) {\r\n        if (existing === invoker) {\r\n          (existing as any)[this.dataField]?.clearLostTask?.();\r\n          return false;\r\n        } else {\r\n          if (!this.gainOrLoseInterest(existing, target, this.InterestState.NoInterest)) {\r\n            return false;\r\n          }\r\n          if (!invoker.isConnected || this.getInterestForTarget(invoker) !== target) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      return this.applyState(invoker, newState);\r\n    }\r\n\r\n    this.clearState(invoker);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Apply interest state to an invoker\r\n   */\r\n  private applyState(invoker: HTMLElement, newState: string): boolean {\r\n    const data = (invoker as any)[this.dataField];\r\n    const target = this.getInterestForTarget(invoker);\r\n    if (!target) return false;\r\n\r\n    switch (newState) {\r\n      case this.InterestState.FullInterest:\r\n        if (data.state !== this.InterestState.NoInterest) {\r\n          throw new Error(\"Invalid state\");\r\n        }\r\n\r\n        // Dispatch interest event\r\n        const interestEvent = new CustomEvent(this.interestEventName, {\r\n          bubbles: true, // Allow bubbling for integration with command system\r\n          cancelable: true\r\n        });\r\n        Object.defineProperty(interestEvent, 'source', { \r\n          value: invoker, \r\n          writable: false \r\n        });\r\n        target.dispatchEvent(interestEvent);\r\n        \r\n        // Also dispatch on the invoker for potential command chaining\r\n        invoker.dispatchEvent(new CustomEvent('interest:shown', {\r\n          bubbles: true,\r\n          detail: { target, source: invoker }\r\n        }));\r\n\r\n        // Show popover if applicable\r\n        try {\r\n          if (target.hasAttribute('popover') && typeof (target as any).showPopover === 'function') {\r\n            (target as any).showPopover();\r\n            // If anchor positioning not supported, position manually\r\n            if (!this.supportsAnchorPositioning()) {\r\n              requestAnimationFrame(() => this.positionPopover(invoker, target));\r\n            }\r\n          }\r\n        } catch {}\r\n\r\n        // Update state\r\n        data.state = this.InterestState.FullInterest;\r\n        if (!(target as any)[this.targetDataField]) {\r\n          (target as any)[this.targetDataField] = {};\r\n        }\r\n        (target as any)[this.targetDataField].invoker = invoker;\r\n\r\n        // Setup popover toggle listener if popover\r\n        if (target.hasAttribute('popover')) {\r\n          const toggleListener = this.createPopoverToggleListener();\r\n          (target as any)[this.targetDataField].toggleListener = toggleListener;\r\n          target.addEventListener('toggle', toggleListener);\r\n        }\r\n\r\n        // Update classes and ARIA\r\n        this.invokersWithInterest.add(invoker);\r\n        invoker.classList.add(\"interest-source\");\r\n        target.classList.add(\"interest-target\");\r\n\r\n        if (!this.isPlainHint(target)) {\r\n          invoker.setAttribute(\"aria-expanded\", \"true\");\r\n        }\r\n\r\n        // Setup anchor positioning\r\n        this.setupAnchorPositioning(invoker, target, data);\r\n        break;\r\n\r\n      default:\r\n        throw new Error(\"Invalid state\");\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Clear interest state from an invoker\r\n   */\r\n  private clearState(invoker: HTMLElement): void {\r\n    const data = (invoker as any)[this.dataField];\r\n    if (!data) return;\r\n\r\n    clearTimeout(data.gainedTimer);\r\n    clearTimeout(data.lostTimer);\r\n\r\n    if (data.state !== this.InterestState.NoInterest) {\r\n      const target = this.getInterestForTarget(invoker);\r\n      if (target) {\r\n        // Dispatch loseinterest event\r\n        const loseInterestEvent = new CustomEvent(this.loseInterestEventName, {\r\n          bubbles: true, // Allow bubbling for integration with command system\r\n          cancelable: true\r\n        });\r\n        Object.defineProperty(loseInterestEvent, 'source', { \r\n          value: invoker, \r\n          writable: false \r\n        });\r\n        target.dispatchEvent(loseInterestEvent);\r\n        \r\n        // Also dispatch on the invoker for potential command chaining\r\n        invoker.dispatchEvent(new CustomEvent('interest:lost', {\r\n          bubbles: true,\r\n          detail: { target, source: invoker }\r\n        }));\r\n\r\n        // Hide popover\r\n        try {\r\n          if (typeof (target as any).hidePopover === 'function') {\r\n            (target as any).hidePopover();\r\n          }\r\n        } catch {}\r\n\r\n        // Cleanup listeners\r\n        const targetData = (target as any)[this.targetDataField];\r\n        if (targetData?.toggleListener) {\r\n          target.removeEventListener('toggle', targetData.toggleListener);\r\n        }\r\n        (target as any)[this.targetDataField] = null;\r\n\r\n        // Update classes and ARIA\r\n        this.invokersWithInterest.delete(invoker);\r\n        invoker.classList.remove(\"interest-source\");\r\n        target.classList.remove(\"interest-target\");\r\n\r\n        if (!this.isPlainHint(target)) {\r\n          invoker.setAttribute(\"aria-expanded\", \"false\");\r\n        }\r\n\r\n        // Cleanup anchor positioning\r\n        this.cleanupAnchorPositioning(invoker, target, data);\r\n      }\r\n      \r\n      data.state = this.InterestState.NoInterest;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if anchor positioning is supported\r\n   */\r\n   private supportsAnchorPositioning(): boolean {\r\n     return 'anchorName' in document.body.style;\r\n   }\r\n\r\n  /**\r\n   * Setup anchor positioning between invoker and target\r\n   */\r\n   private setupAnchorPositioning(\r\n     invoker: HTMLElement,\r\n     target: HTMLElement,\r\n     data: any\r\n   ): void {\r\n     const anchorName = `--interest-anchor-${Math.random().toString(36).substring(2)}`;\r\n     (invoker.style as any).anchorName = anchorName;\r\n     (target.style as any).positionAnchor = anchorName;\r\n     data.anchorName = anchorName;\r\n\r\n  if (this.supportsAnchorPositioning()) {\r\n    // Add CSS for anchor positioning using position-area for automatic fallbacks\r\n    const className = `interest-anchored-${Math.random().toString(36).substring(2)}`;\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      .${className} {\r\n        margin: 0;\r\n        top: calc(anchor(${anchorName} bottom) - 4px);\r\n        left: anchor(${anchorName});\r\n        justify-self: center;\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n    target.classList.add(className);\r\n    data.styleElement = style;\r\n    data.className = className;\r\n  }\r\n   }\r\n\r\n\r\n\r\n  /**\r\n   * Cleanup anchor positioning\r\n   */\r\n   private cleanupAnchorPositioning(\r\n     invoker: HTMLElement,\r\n     target: HTMLElement,\r\n     data: any\r\n   ): void {\r\n     if (data.anchorName) {\r\n       (invoker.style as any).anchorName = \"\";\r\n       (target.style as any).positionAnchor = \"\";\r\n       data.anchorName = null;\r\n     }\r\n     // Cleanup style element\r\n     if (data.styleElement) {\r\n       data.styleElement.remove();\r\n       data.styleElement = null;\r\n     }\r\n     // Cleanup class\r\n     if (data.className) {\r\n       target.classList.remove(data.className);\r\n       data.className = null;\r\n     }\r\n     // Cleanup manual positioning\r\n     (target as HTMLElement).style.position = \"\";\r\n     (target as HTMLElement).style.top = \"\";\r\n     (target as HTMLElement).style.left = \"\";\r\n     (target as HTMLElement).style.zIndex = \"\";\r\n   }\r\n\r\n  /**\r\n   * Position popover relative to invoker since top-layer popovers are centered by default\r\n   * Prefers positioning below (GitHub-style), then above if not enough space\r\n   */\r\n  private positionPopover(invoker: HTMLElement, target: HTMLElement): void {\r\n    const invokerRect = invoker.getBoundingClientRect();\r\n    const targetRect = target.getBoundingClientRect();\r\n\r\n    const viewportWidth = window.innerWidth;\r\n    const viewportHeight = window.innerHeight;\r\n\r\n    let top: number;\r\n    let left: number;\r\n\r\n    // Position centered horizontally on the invoker\r\n    left = invokerRect.left + (invokerRect.width / 2) - (targetRect.width / 2);\r\n\r\n    // Try positioning below first\r\n    top = invokerRect.bottom - 4;\r\n\r\n    // Check if it fits below\r\n    if (top + targetRect.height > viewportHeight) {\r\n      // Try positioning above\r\n      top = invokerRect.top - targetRect.height + 4;\r\n      if (top < 0) {\r\n        // If above also doesn't fit, keep below and adjust\r\n        top = invokerRect.bottom + 8;\r\n      }\r\n    }\r\n\r\n    // Ensure it doesn't go off-screen with final adjustments\r\n    const adjustedLeft = Math.max(8, Math.min(left, viewportWidth - targetRect.width - 8));\r\n    const adjustedTop = Math.max(8, Math.min(top, viewportHeight - targetRect.height - 8));\r\n\r\n    (target as HTMLElement).style.position = 'fixed';\r\n    (target as HTMLElement).style.top = `${adjustedTop}px`;\r\n    (target as HTMLElement).style.left = `${adjustedLeft}px`;\r\n    (target as HTMLElement).style.zIndex = '9999';\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Create popover toggle event listener\r\n   */\r\n  private createPopoverToggleListener() {\r\n    return (e: Event) => {\r\n      const popover = e.target as HTMLElement;\r\n      const toggleEvent = e as any; // ToggleEvent\r\n      if (toggleEvent.newState === 'closed') {\r\n        const targetData = (popover as any)[this.targetDataField];\r\n        const invoker = targetData?.invoker;\r\n        if (invoker) {\r\n          this.gainOrLoseInterest(invoker, popover, this.InterestState.NoInterest);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Schedule task to gain interest after delay\r\n   */\r\n  private scheduleInterestGainedTask(invoker: HTMLElement, newState: string): void {\r\n    const delay = this.getDelaySeconds(invoker, this.interestDelayStartProp) * 1000;\r\n    if (!isFinite(delay) || delay < 0) return;\r\n\r\n    const data = (invoker as any)[this.dataField];\r\n    data.clearGainedTask?.();\r\n    data.gainedTimer = setTimeout(() => {\r\n      this.gainOrLoseInterest(invoker, this.getInterestForTarget(invoker), newState);\r\n    }, delay);\r\n  }\r\n\r\n  /**\r\n   * Schedule task to lose interest after delay\r\n   */\r\n  private scheduleInterestLostTask(invoker: HTMLElement): void {\r\n    const delay = this.getDelaySeconds(invoker, this.interestDelayEndProp) * 1000;\r\n    if (!isFinite(delay) || delay < 0) return;\r\n\r\n    const data = (invoker as any)[this.dataField];\r\n    data.clearLostTask?.();\r\n    data.lostTimer = setTimeout(() => {\r\n      this.gainOrLoseInterest(\r\n        invoker, \r\n        this.getInterestForTarget(invoker), \r\n        this.InterestState.NoInterest\r\n      );\r\n    }, delay);\r\n  }\r\n\r\n  /**\r\n   * Get delay in seconds for a CSS property\r\n   */\r\n  private getDelaySeconds(el: HTMLElement, prop: string): number {\r\n    const style = getComputedStyle(el);\r\n    const longhandValue = style.getPropertyValue(prop).trim();\r\n\r\n    // Longhand has priority\r\n    if (longhandValue.toLowerCase() !== 'normal') {\r\n      return this.parseTimeValue(longhandValue);\r\n    }\r\n\r\n    // Check shorthand\r\n    const shorthand = style.getPropertyValue(this.interestDelayProp).trim();\r\n    if (shorthand && shorthand.toLowerCase() !== 'normal') {\r\n      const parts = shorthand.split(/\\s+/).filter((s) => s.length > 0);\r\n      if (parts.length > 0) {\r\n        const firstValue = parts[0];\r\n        const secondValue = parts.length > 1 ? parts[1] : firstValue;\r\n        const valueFromShorthand = prop === this.interestDelayStartProp \r\n          ? firstValue \r\n          : secondValue;\r\n\r\n        if (valueFromShorthand.toLowerCase() !== 'normal') {\r\n          return this.parseTimeValue(valueFromShorthand);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Default values\r\n    return prop === this.interestDelayStartProp ? 0.5 : 0.25;\r\n  }\r\n\r\n  /**\r\n   * Parse time value from CSS\r\n   */\r\n  private parseTimeValue(val: string): number {\r\n    const s = String(val).trim();\r\n    const m_s = s.match(/^([\\d.]+)s$/);\r\n    if (m_s) {\r\n      return parseFloat(m_s[1]);\r\n    }\r\n    const m_ms = s.match(/^([\\d.]+)ms$/);\r\n    if (m_ms) {\r\n      return parseFloat(m_ms[1]) / 1000;\r\n    }\r\n    return parseFloat(s) || 0;\r\n  }\r\n\r\n  /**\r\n   * Initialize data field for an element\r\n   */\r\n  private initializeDataField(el: HTMLElement): void {\r\n    if ((el as any)[this.dataField]) return;\r\n\r\n    (el as any)[this.dataField] = {\r\n      state: this.InterestState.NoInterest,\r\n      gainedTimer: null,\r\n      lostTimer: null,\r\n      longPressTimer: null,\r\n      anchorName: null,\r\n      clearGainedTask() {\r\n        clearTimeout(this.gainedTimer);\r\n      },\r\n      clearLostTask() {\r\n        clearTimeout(this.lostTimer);\r\n      },\r\n    };\r\n\r\n    const target = this.getInterestForTarget(el);\r\n    if (target) {\r\n      this.setupAccessibility(el, target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup accessibility attributes\r\n   */\r\n  private setupAccessibility(invoker: HTMLElement, target: HTMLElement): void {\r\n    if (this.isPlainHint(target)) {\r\n      invoker.setAttribute(\"aria-describedby\", target.id);\r\n    } else {\r\n      // Rich hint\r\n      invoker.setAttribute(\"aria-details\", target.id);\r\n      invoker.setAttribute(\"aria-expanded\", \"false\");\r\n      if (!target.hasAttribute(\"role\")) {\r\n        target.setAttribute(\"role\", \"tooltip\");\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if target is a plain hint (simple tooltip)\r\n   */\r\n  private isPlainHint(target: HTMLElement): boolean {\r\n    if (target.getAttribute(\"popover\")?.toLowerCase() !== \"hint\") {\r\n      return false;\r\n    }\r\n\r\n    // Check for focusable elements\r\n    const focusableSelector = [\r\n      \"a[href]\",\r\n      \"area[href]\",\r\n      \"input:not([disabled])\",\r\n      \"select:not([disabled])\",\r\n      \"textarea:not([disabled])\",\r\n      \"button:not([disabled])\",\r\n      \"iframe\",\r\n      \"object\",\r\n      \"embed\",\r\n      \"[contenteditable]\",\r\n      '[tabindex]:not([tabindex=\"-1\"])',\r\n    ].join(\",\");\r\n\r\n    if (target.querySelector(focusableSelector)) {\r\n      return false;\r\n    }\r\n\r\n    // Check for structural elements\r\n    const structuralSelector = [\r\n      \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\",\r\n      \"ul\", \"ol\", \"li\", \"table\", \"nav\", \r\n      \"header\", \"footer\", \"main\", \"aside\",\r\n      \"article\", \"section\", \"form\", \"blockquote\",\r\n      \"details\", \"summary\", \"dialog\"\r\n    ].join(\",\");\r\n\r\n    if (target.querySelector(structuralSelector)) {\r\n      return false;\r\n    }\r\n\r\n    // Check ARIA roles\r\n    const elementsWithRoles = target.querySelectorAll(\"[role]\");\r\n    for (const el of elementsWithRoles) {\r\n      const role = el.getAttribute(\"role\")?.toLowerCase();\r\n      if (role && ![\"presentation\", \"none\", \"generic\", \"image\"].includes(role)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get interest target for an element\r\n   */\r\n  private getInterestForTarget(el: HTMLElement): HTMLElement | null {\r\n    const id = el.getAttribute(this.attributeName);\r\n    return id ? document.getElementById(id) : null;\r\n  }\r\n\r\n  /**\r\n   * Get interest invoker for a target element\r\n   */\r\n  private getInterestInvoker(target: HTMLElement): HTMLElement | null {\r\n    const targetData = (target as any)[this.targetDataField];\r\n    const inv = targetData?.invoker || null;\r\n    return inv && (inv as any)[this.dataField]?.state !== this.InterestState.NoInterest\r\n      ? inv\r\n      : null;\r\n  }\r\n\r\n  /**\r\n   * Check if polyfill is initialized\r\n   */\r\n  public isInitialized(): boolean {\r\n    return this.initialized;\r\n  }\r\n}\r\n\r\n// --- Export Functions ---\r\n\r\n/**\r\n * Apply the Interest Invokers polyfill\r\n */\r\nexport function applyInterestInvokers(): void {\r\n  const polyfill = InterestInvokersPolyfill.getInstance();\r\n  \r\n  if (document.readyState === \"complete\") {\r\n    polyfill.apply();\r\n  } else {\r\n    window.addEventListener(\"load\", () => polyfill.apply());\r\n  }\r\n}\r\n\r\n/**\r\n * Create an InterestEvent\r\n */\r\nexport function createInterestEvent(\r\n  type: \"interest\" | \"loseinterest\", \r\n  source?: Element\r\n): InterestEvent {\r\n  const event = new CustomEvent(type, {\r\n    bubbles: false,\r\n    cancelable: false\r\n  }) as any;\r\n\r\n  // Define source property\r\n  Object.defineProperty(event, 'source', {\r\n    value: source || null,\r\n    writable: false,\r\n    enumerable: true\r\n  });\r\n\r\n  return event as InterestEvent;\r\n\r\n  return event;\r\n}\r\n\r\n// Auto-apply the polyfill when this module is imported\r\napplyInterestInvokers();\r\n"],
  "mappings": "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",
  "names": []
}
