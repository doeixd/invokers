{"numTotalTestSuites":62,"numPassedTestSuites":41,"numFailedTestSuites":21,"numPendingTestSuites":0,"numTotalTests":85,"numPassedTests":85,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1758730950063,"success":false,"testResults":[{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/advanced-events.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/advanced-templating.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/and-then-simple.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/attribute-interpolation.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/clean.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/compatibility.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/comprehensive-demo.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/core-commands.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/error-handling.test.ts"},{"assertionResults":[{"ancestorTitles":["Expression Evaluation","Literals"],"fullName":"Expression Evaluation Literals should evaluate numbers","status":"passed","title":"should evaluate numbers","duration":5.525800000000345,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Literals"],"fullName":"Expression Evaluation Literals should evaluate strings","status":"passed","title":"should evaluate strings","duration":0.970299999999952,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Literals"],"fullName":"Expression Evaluation Literals should evaluate booleans","status":"passed","title":"should evaluate booleans","duration":0.9345999999995911,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Literals"],"fullName":"Expression Evaluation Literals should evaluate null","status":"passed","title":"should evaluate null","duration":0.39249999999992724,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Property Access"],"fullName":"Expression Evaluation Property Access should access this properties","status":"passed","title":"should access this properties","duration":1.1852999999996428,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Property Access"],"fullName":"Expression Evaluation Property Access should access nested properties","status":"passed","title":"should access nested properties","duration":0.7361000000000786,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Property Access"],"fullName":"Expression Evaluation Property Access should handle array access","status":"passed","title":"should handle array access","duration":0.9342000000001462,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Arithmetic Operations"],"fullName":"Expression Evaluation Arithmetic Operations should perform addition","status":"passed","title":"should perform addition","duration":0.6241999999997461,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Arithmetic Operations"],"fullName":"Expression Evaluation Arithmetic Operations should perform subtraction","status":"passed","title":"should perform subtraction","duration":0.5228000000001884,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Arithmetic Operations"],"fullName":"Expression Evaluation Arithmetic Operations should perform multiplication","status":"passed","title":"should perform multiplication","duration":0.5419000000001688,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Arithmetic Operations"],"fullName":"Expression Evaluation Arithmetic Operations should perform division","status":"passed","title":"should perform division","duration":0.47359999999980573,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Arithmetic Operations"],"fullName":"Expression Evaluation Arithmetic Operations should perform modulo","status":"passed","title":"should perform modulo","duration":0.470299999999952,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Comparison Operations"],"fullName":"Expression Evaluation Comparison Operations should perform equality comparisons","status":"passed","title":"should perform equality comparisons","duration":0.6837000000000444,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Comparison Operations"],"fullName":"Expression Evaluation Comparison Operations should perform inequality comparisons","status":"passed","title":"should perform inequality comparisons","duration":0.5381999999999607,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Comparison Operations"],"fullName":"Expression Evaluation Comparison Operations should perform relational comparisons","status":"passed","title":"should perform relational comparisons","duration":0.6437999999998283,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Logical Operations"],"fullName":"Expression Evaluation Logical Operations should perform logical AND","status":"passed","title":"should perform logical AND","duration":0.5815999999999804,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Logical Operations"],"fullName":"Expression Evaluation Logical Operations should perform logical OR","status":"passed","title":"should perform logical OR","duration":0.6493999999997868,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Unary Operations"],"fullName":"Expression Evaluation Unary Operations should perform logical NOT","status":"passed","title":"should perform logical NOT","duration":0.5025999999998021,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Unary Operations"],"fullName":"Expression Evaluation Unary Operations should perform unary minus","status":"passed","title":"should perform unary minus","duration":0.29520000000002256,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Conditional (Ternary) Operations"],"fullName":"Expression Evaluation Conditional (Ternary) Operations should evaluate conditional expressions","status":"passed","title":"should evaluate conditional expressions","duration":0.793999999999869,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Conditional (Ternary) Operations"],"fullName":"Expression Evaluation Conditional (Ternary) Operations should handle nested conditionals","status":"passed","title":"should handle nested conditionals","duration":0.326799999999821,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Complex Expressions"],"fullName":"Expression Evaluation Complex Expressions should evaluate complex expressions","status":"passed","title":"should evaluate complex expressions","duration":1.317700000000059,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Error Handling"],"fullName":"Expression Evaluation Error Handling should handle division by zero","status":"passed","title":"should handle division by zero","duration":1.8967999999999847,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Error Handling"],"fullName":"Expression Evaluation Error Handling should handle invalid expressions gracefully","status":"passed","title":"should handle invalid expressions gracefully","duration":0.8420000000000982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Nested Property Access"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Nested Property Access should handle deeply nested property chains","status":"passed","title":"should handle deeply nested property chains","duration":0.7291000000000167,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Nested Property Access"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Nested Property Access should handle property access on undefined intermediates","status":"passed","title":"should handle property access on undefined intermediates","duration":0.5335000000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Complex Operator Precedence"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Complex Operator Precedence should handle mixed arithmetic and comparison operators","status":"passed","title":"should handle mixed arithmetic and comparison operators","duration":0.44030000000020664,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Complex Operator Precedence"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Complex Operator Precedence should handle logical operator precedence","status":"passed","title":"should handle logical operator precedence","duration":0.4938999999999396,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Complex Operator Precedence"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Complex Operator Precedence should handle unary operators with precedence","status":"passed","title":"should handle unary operators with precedence","duration":0.4753000000000611,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","String Operations"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios String Operations should handle string property access","status":"passed","title":"should handle string property access","duration":0.5974999999998545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","String Operations"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios String Operations should handle string concatenation via addition","status":"passed","title":"should handle string concatenation via addition","duration":0.36639999999988504,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Array Access Edge Cases"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Array Access Edge Cases should handle array access with expressions","status":"passed","title":"should handle array access with expressions","duration":0.37330000000019936,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Array Access Edge Cases"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Array Access Edge Cases should handle out-of-bounds array access","status":"passed","title":"should handle out-of-bounds array access","duration":0.5547999999998865,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Array Access Edge Cases"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Array Access Edge Cases should handle nested array access","status":"passed","title":"should handle nested array access","duration":0.4917000000000371,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Ternary Operator Edge Cases"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Ternary Operator Edge Cases should handle nested ternary operators","status":"passed","title":"should handle nested ternary operators","duration":0.6547999999997955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Ternary Operator Edge Cases"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Ternary Operator Edge Cases should handle ternary with complex conditions","status":"passed","title":"should handle ternary with complex conditions","duration":0.35019999999985885,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Ternary Operator Edge Cases"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Ternary Operator Edge Cases should handle ternary with different value types","status":"passed","title":"should handle ternary with different value types","duration":0.4623999999998887,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Parentheses and Grouping"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Parentheses and Grouping should handle deeply nested parentheses","status":"passed","title":"should handle deeply nested parentheses","duration":0.4800000000000182,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Parentheses and Grouping"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Parentheses and Grouping should handle parentheses affecting precedence","status":"passed","title":"should handle parentheses affecting precedence","duration":0.4920999999999367,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Null and Undefined Handling"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Null and Undefined Handling should handle null values in expressions","status":"passed","title":"should handle null values in expressions","duration":0.4393000000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Null and Undefined Handling"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Null and Undefined Handling should handle undefined property access","status":"passed","title":"should handle undefined property access","duration":0.34760000000005675,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Type Coercion"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Type Coercion should handle loose equality with type coercion","status":"passed","title":"should handle loose equality with type coercion","duration":0.33159999999998035,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Type Coercion"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Type Coercion should handle strict equality without coercion","status":"passed","title":"should handle strict equality without coercion","duration":0.3773999999998523,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Complex Expression Combinations"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Complex Expression Combinations should handle very complex nested expressions","status":"passed","title":"should handle very complex nested expressions","duration":0.4216000000001259,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Edge Cases and Complex Scenarios","Complex Expression Combinations"],"fullName":"Expression Evaluation Edge Cases and Complex Scenarios Complex Expression Combinations should handle expressions with multiple array operations","status":"passed","title":"should handle expressions with multiple array operations","duration":0.38819999999986976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Interpolation Edge Cases","Multiple Expressions in Template"],"fullName":"Expression Evaluation Interpolation Edge Cases Multiple Expressions in Template should handle multiple expressions in one template","status":"passed","title":"should handle multiple expressions in one template","duration":0.9012000000002445,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Interpolation Edge Cases","Multiple Expressions in Template"],"fullName":"Expression Evaluation Interpolation Edge Cases Multiple Expressions in Template should handle adjacent expressions","status":"passed","title":"should handle adjacent expressions","duration":0.32880000000022847,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Interpolation Edge Cases","Multiple Expressions in Template"],"fullName":"Expression Evaluation Interpolation Edge Cases Multiple Expressions in Template should handle expressions with special characters","status":"passed","title":"should handle expressions with special characters","duration":0.21519999999964057,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Interpolation Edge Cases","Nested Interpolation"],"fullName":"Expression Evaluation Interpolation Edge Cases Nested Interpolation should handle expressions that reference interpolated values","status":"passed","title":"should handle expressions that reference interpolated values","duration":0.37390000000004875,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Interpolation Edge Cases","Empty and Malformed Expressions"],"fullName":"Expression Evaluation Interpolation Edge Cases Empty and Malformed Expressions should handle empty expressions","status":"passed","title":"should handle empty expressions","duration":0.6101000000003296,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Interpolation Edge Cases","Empty and Malformed Expressions"],"fullName":"Expression Evaluation Interpolation Edge Cases Empty and Malformed Expressions should handle malformed expressions gracefully","status":"passed","title":"should handle malformed expressions gracefully","duration":0.5961000000002059,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Interpolation Edge Cases","Empty and Malformed Expressions"],"fullName":"Expression Evaluation Interpolation Edge Cases Empty and Malformed Expressions should handle unclosed expressions","status":"passed","title":"should handle unclosed expressions","duration":0.30150000000003274,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Interpolation Edge Cases","Expression Whitespace Handling"],"fullName":"Expression Evaluation Interpolation Edge Cases Expression Whitespace Handling should trim whitespace around expressions","status":"passed","title":"should trim whitespace around expressions","duration":0.4440999999997075,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Command Chaining with Expressions","Dynamic Command Generation"],"fullName":"Expression Evaluation Command Chaining with Expressions Dynamic Command Generation should handle expressions in command parameters","status":"passed","title":"should handle expressions in command parameters","duration":0.387000000000171,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Command Chaining with Expressions","Dynamic Command Generation"],"fullName":"Expression Evaluation Command Chaining with Expressions Dynamic Command Generation should handle conditional command generation","status":"passed","title":"should handle conditional command generation","duration":0.48549999999977445,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Command Chaining with Expressions","Complex Command Chains"],"fullName":"Expression Evaluation Command Chaining with Expressions Complex Command Chains should handle expressions in chained commands","status":"passed","title":"should handle expressions in chained commands","duration":0.4679000000000997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Command Chaining with Expressions","Complex Command Chains"],"fullName":"Expression Evaluation Command Chaining with Expressions Complex Command Chains should handle dynamic parameter calculation","status":"passed","title":"should handle dynamic parameter calculation","duration":0.7391999999999825,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Command Chaining with Expressions","Error Handling in Command Chains"],"fullName":"Expression Evaluation Command Chaining with Expressions Error Handling in Command Chains should handle expression failures in command contexts","status":"passed","title":"should handle expression failures in command contexts","duration":0.4940000000001419,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Command Chaining with Expressions","Error Handling in Command Chains"],"fullName":"Expression Evaluation Command Chaining with Expressions Error Handling in Command Chains should handle type mismatches in expressions","status":"passed","title":"should handle type mismatches in expressions","duration":0.4873999999999796,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Performance and Scale"],"fullName":"Expression Evaluation Performance and Scale should handle large arrays efficiently","status":"passed","title":"should handle large arrays efficiently","duration":0.7855000000004111,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Performance and Scale"],"fullName":"Expression Evaluation Performance and Scale should handle deep object traversal","status":"passed","title":"should handle deep object traversal","duration":1.5301999999996951,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Performance and Scale"],"fullName":"Expression Evaluation Performance and Scale should handle complex expressions with many operations","status":"passed","title":"should handle complex expressions with many operations","duration":0.7696000000000822,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Security and Adversarial Inputs"],"fullName":"Expression Evaluation Security and Adversarial Inputs should reject dangerous global object access","status":"passed","title":"should reject dangerous global object access","duration":2.4645000000000437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Security and Adversarial Inputs"],"fullName":"Expression Evaluation Security and Adversarial Inputs should reject dangerous function calls","status":"passed","title":"should reject dangerous function calls","duration":6.161200000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Security and Adversarial Inputs"],"fullName":"Expression Evaluation Security and Adversarial Inputs should reject prototype pollution attempts","status":"passed","title":"should reject prototype pollution attempts","duration":1.9250999999999294,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Security and Adversarial Inputs"],"fullName":"Expression Evaluation Security and Adversarial Inputs should reject expressions with invalid characters","status":"passed","title":"should reject expressions with invalid characters","duration":4.60550000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Security and Adversarial Inputs"],"fullName":"Expression Evaluation Security and Adversarial Inputs should handle overly complex expressions","status":"passed","title":"should handle overly complex expressions","duration":3.2693999999996777,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Security and Adversarial Inputs"],"fullName":"Expression Evaluation Security and Adversarial Inputs should prevent deep recursion","status":"passed","title":"should prevent deep recursion","duration":13.312199999999848,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expression Evaluation","Security and Adversarial Inputs"],"fullName":"Expression Evaluation Security and Adversarial Inputs should sanitize context objects","status":"passed","title":"should sanitize context objects","duration":8.81309999999985,"failureMessages":[],"meta":{}}],"startTime":1758730952974,"endTime":1758730953060.813,"status":"passed","message":"","name":"C:/Users/Patrick/invokers/test/expression.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/extended-commands.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/final.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/future-commands.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/index.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/integration.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/interest-invokers.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/pipeline.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/plugin-system-advanced.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/plugin-system.test.ts"},{"assertionResults":[{"ancestorTitles":["Target Resolver","ID Selectors"],"fullName":"Target Resolver ID Selectors should resolve ID selectors with # prefix","status":"passed","title":"should resolve ID selectors with # prefix","duration":9.592100000000073,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","ID Selectors"],"fullName":"Target Resolver ID Selectors should return empty array for non-existent IDs","status":"passed","title":"should return empty array for non-existent IDs","duration":2.504699999999957,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","Global CSS Selectors"],"fullName":"Target Resolver Global CSS Selectors should resolve class selectors","status":"passed","title":"should resolve class selectors","duration":14.867299999999886,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","Global CSS Selectors"],"fullName":"Target Resolver Global CSS Selectors should resolve complex selectors","status":"passed","title":"should resolve complex selectors","duration":9.276299999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","Global CSS Selectors"],"fullName":"Target Resolver Global CSS Selectors should return empty array for invalid selectors","status":"passed","title":"should return empty array for invalid selectors","duration":9.382900000000063,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","Contextual Selectors","@closest()"],"fullName":"Target Resolver Contextual Selectors @closest() should find closest ancestor matching selector","status":"passed","title":"should find closest ancestor matching selector","duration":6.2741000000000895,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","Contextual Selectors","@closest()"],"fullName":"Target Resolver Contextual Selectors @closest() should return empty array if no matching ancestor found","status":"passed","title":"should return empty array if no matching ancestor found","duration":3.6825999999998658,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","Contextual Selectors","@child()"],"fullName":"Target Resolver Contextual Selectors @child() should find first child matching selector","status":"passed","title":"should find first child matching selector","duration":2.3829000000000633,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","Contextual Selectors","@child()"],"fullName":"Target Resolver Contextual Selectors @child() should return empty array if no matching child found","status":"passed","title":"should return empty array if no matching child found","duration":1.791400000000067,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","Contextual Selectors","@children()"],"fullName":"Target Resolver Contextual Selectors @children() should find all children matching selector","status":"passed","title":"should find all children matching selector","duration":3.1135999999999058,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","Contextual Selectors","@children()"],"fullName":"Target Resolver Contextual Selectors @children() should return empty array if no matching children found","status":"passed","title":"should return empty array if no matching children found","duration":1.217200000000048,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","Contextual Selectors"],"fullName":"Target Resolver Contextual Selectors should return empty array for invalid @ syntax","status":"passed","title":"should return empty array for invalid @ syntax","duration":1.6649999999999636,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","Contextual Selectors"],"fullName":"Target Resolver Contextual Selectors should return empty array for malformed @ selectors","status":"passed","title":"should return empty array for malformed @ selectors","duration":1.0002000000001772,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","Edge Cases"],"fullName":"Target Resolver Edge Cases should handle empty selectors","status":"passed","title":"should handle empty selectors","duration":1.8641000000000076,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","Edge Cases"],"fullName":"Target Resolver Edge Cases should handle whitespace-only selectors","status":"passed","title":"should handle whitespace-only selectors","duration":1.2654999999999745,"failureMessages":[],"meta":{}},{"ancestorTitles":["Target Resolver","Edge Cases"],"fullName":"Target Resolver Edge Cases should handle selectors with special characters that are still valid IDs","status":"passed","title":"should handle selectors with special characters that are still valid IDs","duration":1.1423000000002048,"failureMessages":[],"meta":{}}],"startTime":1758730954522,"endTime":1758730954595.1423,"status":"passed","message":"","name":"C:/Users/Patrick/invokers/test/target-resolver.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/template-commands.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/ternary-interpolation-commands.test.ts"},{"assertionResults":[],"startTime":1758730950063,"endTime":1758730950063,"status":"failed","message":"Transform failed with 1 error:\nC:/Users/Patrick/invokers/src/core.ts:118:9: ERROR: The symbol \"sanitizeParams\" has already been declared","name":"C:/Users/Patrick/invokers/test/url-commands.test.ts"}]}